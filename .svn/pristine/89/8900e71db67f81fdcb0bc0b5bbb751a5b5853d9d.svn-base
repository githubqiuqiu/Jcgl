package com.edu.action;



import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts2.ServletActionContext;

import com.alibaba.fastjson.JSON;
import com.edu.bean.OrganizationBean;
import com.edu.bean.RoleBean;
import com.edu.bean.UserBean;
import com.edu.model.Organization;
import com.edu.model.Role;
import com.edu.model.User;
import com.edu.service.QiuService;
import com.opensymphony.xwork2.ActionSupport;

public class BeforeEditAction extends ActionSupport{
	private String id;
	private QiuService qiuService;
	private Role role;
	private User user;
	private List list;
	private Organization organization;
	private List<OrganizationBean> listorg;
	private List<RoleBean> listrole;
	
	

	public List<RoleBean> getListrole() {
		return listrole;
	}


	public void setListrole(List<RoleBean> listrole) {
		this.listrole = listrole;
	}


	public List<OrganizationBean> getListorg() {
		return listorg;
	}


	public void setListorg(List<OrganizationBean> listorg) {
		this.listorg = listorg;
	}


	public Organization getOrganization() {
		return organization;
	}


	public void setOrganization(Organization organization) {
		this.organization = organization;
	}


	public List getList() {
		return list;
	}


	public void setList(List list) {
		this.list = list;
	}


	public User getUser() {
		return user;
	}


	public void setUser(User user) {
		this.user = user;
	}


	private String json;
	
	
	public String getJson() {
		return json;
	}


	public void setJson(String json) {
		this.json = json;
	}


	public Role getRole() {
		return role;
	}


	public void setRole(Role role) {
		this.role = role;
	}


	public QiuService getQiuService() {
		return qiuService;
	}


	public void setQiuService(QiuService qiuService) {
		this.qiuService = qiuService;
	}


	public String getId() {
		return id;
	}


	public void setId(String id) {
		this.id = id;
	}


	//编辑之前先查询role表的方法
	public String beforeroleedit() {
		HttpServletResponse res=ServletActionContext.getResponse();
		HttpServletRequest req=ServletActionContext.getRequest();
		res.setCharacterEncoding("utf-8");
		
		int i=Integer.parseInt(id);
		role=qiuService.selrole(i);
		
		return SUCCESS;
	}
	
	//编辑前查询user表的方法
	public String beforeuseredit() {
		HttpServletResponse res=ServletActionContext.getResponse();
		HttpServletRequest req=ServletActionContext.getRequest();
		HttpSession session=req.getSession();
		
		
		res.setCharacterEncoding("utf-8");
		int i=Integer.parseInt(id);
		
		user=qiuService.seluser(i);
		listorg=qiuService.selorg();
		for (int j = 0; j < listorg.size(); j++) {
			OrganizationBean ob=listorg.get(j);
			//借用字段保存user表的部门id 到页面做下拉框的判断
			ob.setSeq(user.getOrganizationid());
			
		}
		
		
		listrole=qiuService.selrole();
		for (int j = 0; j < listrole.size(); j++) {
			RoleBean rb=listrole.get(j);
			//借用字段保存user表的角色id 到页面做下拉框的判断
			rb.setSeq(user.getRid());
		}
		
		
		return SUCCESS;
	}
	
	//编辑前查询organization表的方法
	public String beforedepedit() {
		HttpServletResponse res=ServletActionContext.getResponse();
		HttpServletRequest req=ServletActionContext.getRequest();
		HttpSession session=req.getSession();
		res.setCharacterEncoding("utf-8");
		int i=Integer.parseInt(id);
		organization=qiuService.selorg(i);
		
		return SUCCESS;
	}
	
	
	
}
